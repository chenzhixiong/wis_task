<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gszh.wis.quartz.dao.TaskJobCronDAO">

    <select id="getAll" resultType="com.gszh.wis.quartz.model.TaskJobCron">
        select * from task_job_cron 
    </select>

    <select id="getTask" parameterType="com.gszh.wis.quartz.model.TaskJobCron" resultType="com.gszh.wis.quartz.model.TaskJobCron">
        select * from task_job_cron where 1=1
        <if test="id !=null and id>0">
            AND id=#{id}
        </if>
        <if test="jobName !=null and jobName!=''">
            AND job_name=#{jobName}
        </if>
        <if test="jobGroup !=null and jobGroup!=''">
            AND job_group=#{jobGroup}
        </if>
        <if test="entityClass !=null and entityClass!=''">
            AND entity_class=#{entityClass}
        </if>
        <if test="cronExpression !=null and cronExpression!=''">
            AND cron_expression=#{cronExpression}
        </if>
        <if test="priority !=null and priority>=0">
            AND priority=#{priority}
        </if>
        <if test="misfire !=null and misfire>=0">
            AND misfire=#{misfire}
        </if>
    </select>

    <insert id="insert" parameterType="com.gszh.wis.quartz.model.TaskJobCron">
        INSERT INTO task_job_cron (
            id,
            job_name,
            job_group,
            entity_class,
            cron_expression,
            priority,
            misfire,
            if_boot,
            is_rely_on,
            rely_wait_time,
            rely_on,
            start_time,
            end_time,
            job_type,
            description,
            create_time,
            update_time,
            creater,
            updater
        )
        VALUES
            (
                #{jobName},
                #{jobGroup},
                #{entityClass},
                #{cronExpression},
                #{priority},
                #{misfire},
                #{ifBoot},
                #{isRelyOn},
                #{relyWaitTime},
                #{relyOn},
                #{startTime},
                #{endTime},
                #{jobType},
                #{description},
                #{creater},
                #{updater}
            );
    </insert>

    <update id="update" parameterType="com.gszh.wis.quartz.model.TaskJobCron">
        UPDATE task_job_cron
        SET
            entity_class=#{entityClass},
            cron_expression=#{cronExpression},
            priority=#{priority},
            misfire=#{misfire},
            if_boot=#{ifBoot},
            is_rely_on=#{isRelyOn},
            rely_wait_time=#{relyWaitTime},
            rely_on=#{relyOn},
            start_time=#{startTime},
            end_time=#{endTime},
            job_type=#{jobType},
            description=#{description},
            create_time=#{creater},
            update_time=#{updater}
        WHERE
            job_name=#{jobName} AND
            job_group=#{jobGroup}
	</update>

    <delete id="delete" parameterType="com.gszh.wis.quartz.model.TaskJobCron">
        delete from task_job_cron
        WHERE
            job_name=#{jobName} AND
            job_group=#{jobGroup}
    </delete>
</mapper>

